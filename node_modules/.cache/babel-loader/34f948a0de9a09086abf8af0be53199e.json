{"ast":null,"code":"import _toConsumableArray from\"C:/js/hangman/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"C:/js/hangman/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import Button from\"./Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Keyboard=function Keyboard(_ref){var guessedChars=_ref.guessedChars,setGuessedChars=_ref.setGuessedChars,setCount=_ref.setCount,count=_ref.count,toGuessC=_ref.toGuessC;var charList=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','r','s','t','u','v','w','x','y','å','ä','ö'];function checkGuess(toGuessC,guessedChars){var _iterator=_createForOfIteratorHelper(toGuessC),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var char=_step.value;if(char===guessedChars[guessedChars.length-1])return true;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return false;}function buttonPressed(id){var char=id.target.innerHTML;guessedChars=[].concat(_toConsumableArray(guessedChars),[char]);setGuessedChars(guessedChars);var flag=true;if(guessedChars.length>0)flag=checkGuess(toGuessC,guessedChars);if(!flag){var temp=count+1;setCount(temp);}}return/*#__PURE__*/_jsxs(_Fragment,{children:[charList.slice(0,10).map(function(value){return/*#__PURE__*/_jsx(Button,{name:value,className:\"keyboard\",id:'key_'+{value:value},onClick:function onClick(e){return buttonPressed(e);}});}),/*#__PURE__*/_jsx(\"br\",{}),charList.slice(10,20).map(function(value){return/*#__PURE__*/_jsx(Button,{name:value,className:\"keyboard\",id:'key_'+{value:value},onClick:function onClick(e){return buttonPressed(e);}});}),/*#__PURE__*/_jsx(\"br\",{}),charList.slice(20,30).map(function(value){return/*#__PURE__*/_jsx(Button,{name:value,className:\"keyboard\",id:'key_'+{value:value},onClick:function onClick(e){return buttonPressed(e);}});}),/*#__PURE__*/_jsx(\"br\",{})]});};export default Keyboard;","map":{"version":3,"sources":["C:/js/hangman/src/Keyboard.js"],"names":["Button","Keyboard","guessedChars","setGuessedChars","setCount","count","toGuessC","charList","checkGuess","char","length","buttonPressed","id","target","innerHTML","flag","temp","slice","map","value","e"],"mappings":"gOAAA,MAAOA,CAAAA,MAAP,KAAmB,UAAnB,C,6IAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA4D,IAA1DC,CAAAA,YAA0D,MAA1DA,YAA0D,CAA7CC,eAA6C,MAA7CA,eAA6C,CAA7BC,QAA6B,MAA7BA,QAA6B,CAApBC,KAAoB,MAApBA,KAAoB,CAAdC,QAAc,MAAdA,QAAc,CAEzE,GAAIC,CAAAA,QAAQ,CAAC,CAAC,GAAD,CAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAAiB,GAAjB,CAAqB,GAArB,CAAyB,GAAzB,CAA6B,GAA7B,CAAiC,GAAjC,CAAqC,GAArC,CAAyC,GAAzC,CAA6C,GAA7C,CAAiD,GAAjD,CAAqD,GAArD,CAAyD,GAAzD,CAA6D,GAA7D,CAAiE,GAAjE,CAAqE,GAArE,CAAyE,GAAzE,CAA6E,GAA7E,CAAiF,GAAjF,CAAqF,GAArF,CAAyF,GAAzF,CAA6F,GAA7F,CAAiG,GAAjG,CAAqG,GAArG,CAAyG,GAAzG,CAAb,CACA,QAASC,CAAAA,UAAT,CAAoBF,QAApB,CAA6BJ,YAA7B,CAA0C,0CACtBI,QADsB,YACtC,+CAAyB,IAAjBG,CAAAA,IAAiB,aACrB,GAAIA,IAAI,GAAKP,YAAY,CAACA,YAAY,CAACQ,MAAb,CAAoB,CAArB,CAAzB,CAAiD,MAAO,KAAP,CACpD,CAHqC,qDAItC,MAAO,MAAP,CACH,CACD,QAASC,CAAAA,aAAT,CAAuBC,EAAvB,CAA0B,CACtB,GAAIH,CAAAA,IAAI,CAAGG,EAAE,CAACC,MAAH,CAAUC,SAArB,CACAZ,YAAY,8BAAOA,YAAP,GAAoBO,IAApB,EAAZ,CACAN,eAAe,CAACD,YAAD,CAAf,CACA,GAAIa,CAAAA,IAAI,CAAG,IAAX,CACA,GAAIb,YAAY,CAACQ,MAAb,CAAoB,CAAxB,CAA0BK,IAAI,CAAGP,UAAU,CAACF,QAAD,CAAUJ,YAAV,CAAjB,CAC1B,GAAG,CAACa,IAAJ,CAAS,CACL,GAAIC,CAAAA,IAAI,CAAGX,KAAK,CAAC,CAAjB,CACAD,QAAQ,CAACY,IAAD,CAAR,CACH,CAGJ,CACD,mBACI,2BAEMT,QAAQ,CAACU,KAAT,CAAe,CAAf,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,SAACC,KAAD,CAAS,CAChC,mBAAO,KAAC,MAAD,EAAQ,IAAI,CAAIA,KAAhB,CAAuB,SAAS,CAAG,UAAnC,CAA8C,EAAE,CAAE,OAAO,CAACA,KAAK,CAALA,KAAD,CAAzD,CAAkE,OAAO,CAAI,iBAACC,CAAD,QAAOT,CAAAA,aAAa,CAACS,CAAD,CAApB,EAA7E,EAAP,CACD,CAFD,CAFN,cAMI,aANJ,CAQMb,QAAQ,CAACU,KAAT,CAAe,EAAf,CAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,SAACC,KAAD,CAAS,CACjC,mBAAO,KAAC,MAAD,EAAQ,IAAI,CAAIA,KAAhB,CAAuB,SAAS,CAAG,UAAnC,CAA8C,EAAE,CAAE,OAAO,CAACA,KAAK,CAALA,KAAD,CAAzD,CAAkE,OAAO,CAAI,iBAACC,CAAD,QAAOT,CAAAA,aAAa,CAACS,CAAD,CAApB,EAA7E,EAAP,CACD,CAFD,CARN,cAYI,aAZJ,CAcMb,QAAQ,CAACU,KAAT,CAAe,EAAf,CAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,SAACC,KAAD,CAAS,CACjC,mBAAO,KAAC,MAAD,EAAQ,IAAI,CAAIA,KAAhB,CAAuB,SAAS,CAAG,UAAnC,CAA8C,EAAE,CAAE,OAAO,CAACA,KAAK,CAALA,KAAD,CAAzD,CAAkE,OAAO,CAAI,iBAACC,CAAD,QAAOT,CAAAA,aAAa,CAACS,CAAD,CAApB,EAA7E,EAAP,CACD,CAFD,CAdN,cAkBI,aAlBJ,GADJ,CAsBH,CA5CD,CA8CA,cAAenB,CAAAA,QAAf","sourcesContent":["import Button from \"./Button\";\r\n\r\nconst Keyboard = ({guessedChars,setGuessedChars,setCount,count,toGuessC}) => {\r\n\r\n    let charList=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','r','s','t','u','v','w','x','y','å','ä','ö']\r\n    function checkGuess(toGuessC,guessedChars){\r\n        for(let char of toGuessC){\r\n            if (char === guessedChars[guessedChars.length-1])return true;\r\n        }\r\n        return false;\r\n    }\r\n    function buttonPressed(id){\r\n        let char = id.target.innerHTML;\r\n        guessedChars = [...guessedChars,char];\r\n        setGuessedChars(guessedChars);\r\n        let flag = true;\r\n        if (guessedChars.length>0)flag = checkGuess(toGuessC,guessedChars);\r\n        if(!flag){\r\n            let temp = count+1;\r\n            setCount(temp);\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n              charList.slice(0,10).map((value)=>{\r\n                return <Button name = {value} className = \"keyboard\" id={'key_'+{value}} onClick = {(e) => buttonPressed(e)} />  \r\n              })  \r\n            }\r\n            <br/>\r\n            {\r\n              charList.slice(10,20).map((value)=>{\r\n                return <Button name = {value} className = \"keyboard\" id={'key_'+{value}} onClick = {(e) => buttonPressed(e)} />  \r\n              })  \r\n            }\r\n            <br/>\r\n            {\r\n              charList.slice(20,30).map((value)=>{\r\n                return <Button name = {value} className = \"keyboard\" id={'key_'+{value}} onClick = {(e) => buttonPressed(e)} />  \r\n              })  \r\n            }\r\n            <br/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Keyboard\r\n"]},"metadata":{},"sourceType":"module"}