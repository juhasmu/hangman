{"ast":null,"code":"import _slicedToArray from\"C:/js/hangman/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import ShowDrawing from\"./ShowDrawing\";import ShowWord from\"./ShowWord\";import{useState}from'react';import Keyboard from\"./Keyboard\";import GameOver from\"./GameOver\";import ShowGuessedChars from\"./ShowGuessedChars\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Main=function Main(_ref){var toGuessChars=_ref.toGuessChars;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),guessedChars=_useState4[0],setGuessedChars=_useState4[1];if(count<1){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ShowWord,{toGuessChars:toGuessChars,guessedChars:guessedChars}),/*#__PURE__*/_jsx(Keyboard,{guessedChars:guessedChars,setGuessedChars:setGuessedChars,setCount:setCount,count:count,toGuessC:toGuessChars}),/*#__PURE__*/_jsx(ShowGuessedChars,{guessedChars:guessedChars})]});}else if(count>10){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ShowDrawing,{drawingIndex:10}),/*#__PURE__*/_jsx(GameOver,{})]});}else{return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ShowDrawing,{drawingIndex:count}),/*#__PURE__*/_jsx(ShowWord,{toGuessChars:toGuessChars,guessedChars:guessedChars}),/*#__PURE__*/_jsx(Keyboard,{guessedChars:guessedChars,setGuessedChars:setGuessedChars,setCount:setCount,count:count,toGuessC:toGuessChars}),/*#__PURE__*/_jsx(ShowGuessedChars,{guessedChars:guessedChars})]});}};export default Main;","map":{"version":3,"sources":["C:/js/hangman/src/Main.js"],"names":["ShowDrawing","ShowWord","useState","Keyboard","GameOver","ShowGuessedChars","Main","toGuessChars","count","setCount","guessedChars","setGuessedChars"],"mappings":"gGAAA,MAAOA,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,C,6IAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAoB,IAAlBC,CAAAA,YAAkB,MAAlBA,YAAkB,CAE7B,cAAuBL,QAAQ,CAAC,CAAD,CAA/B,wCAAKM,KAAL,eAAWC,QAAX,eACA,eAAmCP,QAAQ,CAAC,EAAD,CAA3C,yCAAKQ,YAAL,eAAkBC,eAAlB,eACA,GAAGH,KAAK,CAAC,CAAT,CAAW,CACP,mBACI,wCACI,KAAC,QAAD,EAAU,YAAY,CAAED,YAAxB,CAAsC,YAAY,CAAEG,YAApD,EADJ,cAEI,KAAC,QAAD,EAAU,YAAY,CAAEA,YAAxB,CAAsC,eAAe,CAAEC,eAAvD,CAAwE,QAAQ,CAAEF,QAAlF,CAA4F,KAAK,CAAED,KAAnG,CAA0G,QAAQ,CAAED,YAApH,EAFJ,cAGI,KAAC,gBAAD,EAAkB,YAAY,CAAEG,YAAhC,EAHJ,GADJ,CAME,CAPN,IAQK,IAAGF,KAAK,CAAC,EAAT,CAAY,CACb,mBACI,wCACI,KAAC,WAAD,EAAa,YAAY,CAAE,EAA3B,EADJ,cAEI,KAAC,QAAD,IAFJ,GADJ,CAMH,CAPI,IAQD,CACJ,mBACI,wCACI,KAAC,WAAD,EAAa,YAAY,CAAEA,KAA3B,EADJ,cAEI,KAAC,QAAD,EAAU,YAAY,CAAED,YAAxB,CAAsC,YAAY,CAAEG,YAApD,EAFJ,cAGI,KAAC,QAAD,EAAU,YAAY,CAAEA,YAAxB,CAAsC,eAAe,CAAEC,eAAvD,CAAwE,QAAQ,CAAEF,QAAlF,CAA4F,KAAK,CAAED,KAAnG,CAA0G,QAAQ,CAAED,YAApH,EAHJ,cAII,KAAC,gBAAD,EAAkB,YAAY,CAAEG,YAAhC,EAJJ,GADJ,CAOE,CACL,CA7BD,CA+BA,cAAeJ,CAAAA,IAAf","sourcesContent":["import ShowDrawing from \"./ShowDrawing\";\r\nimport ShowWord from \"./ShowWord\";\r\nimport { useState } from 'react'\r\nimport Keyboard from \"./Keyboard\";\r\nimport GameOver from \"./GameOver\";\r\nimport ShowGuessedChars from \"./ShowGuessedChars\";\r\n\r\nconst Main = ({toGuessChars}) => {\r\n    \r\n    let [count,setCount] = useState(0);\r\n    let [guessedChars,setGuessedChars]=useState([]);\r\n    if(count<1){\r\n        return (\r\n            <>\r\n                <ShowWord toGuessChars={toGuessChars} guessedChars={guessedChars}/>\r\n                <Keyboard guessedChars={guessedChars} setGuessedChars={setGuessedChars} setCount={setCount} count={count} toGuessC={toGuessChars}/>\r\n                <ShowGuessedChars guessedChars={guessedChars}/>  \r\n            </>\r\n        )}\r\n    else if(count>10){\r\n        return (\r\n            <>\r\n                <ShowDrawing drawingIndex={10}/>\r\n                <GameOver/> \r\n            </>\r\n        )\r\n    }\r\n    else{\r\n    return (\r\n        <>\r\n            <ShowDrawing drawingIndex={count}/>\r\n            <ShowWord toGuessChars={toGuessChars} guessedChars={guessedChars}/>\r\n            <Keyboard guessedChars={guessedChars} setGuessedChars={setGuessedChars} setCount={setCount} count={count} toGuessC={toGuessChars}/>  \r\n            <ShowGuessedChars guessedChars={guessedChars}/>\r\n        </>\r\n    )}\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}